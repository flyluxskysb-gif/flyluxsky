const fs = require('fs');
const path = require('path');

// –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤
const airportsPath = path.join(__dirname, '..', 'src', 'lib', 'airports.json');
const airportsData = JSON.parse(fs.readFileSync(airportsPath, 'utf8'));

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ (–∫–æ–ø–∏—Ä—É–µ–º –∏–∑ utils.ts)
function searchAirports(query, limit = 10) {
  if (!query || query.length < 2) return [];
  
  const searchTerm = query.toLowerCase().trim();
  const results = [];
  
  for (const airport of airportsData) {
    if (results.length >= limit) break;
    
    const nameMatch = airport.name.toLowerCase().includes(searchTerm);
    const codeMatch = airport.code.toLowerCase().includes(searchTerm);
    const cityMatch = airport.city.toLowerCase().includes(searchTerm);
    const countryMatch = airport.country.toLowerCase().includes(searchTerm);
    
    if (nameMatch || codeMatch || cityMatch || countryMatch) {
      results.push(airport);
    }
  }
  
  // –°–æ—Ä—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏
  return results.sort((a, b) => {
    // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –∫–æ–¥–∞, –∑–∞—Ç–µ–º –Ω–∞—á–∞–ª–æ –∫–æ–¥–∞, –∑–∞—Ç–µ–º –æ—Å—Ç–∞–ª—å–Ω–æ–µ
    if (a.code.toLowerCase() === searchTerm) return -1;
    if (b.code.toLowerCase() === searchTerm) return 1;
    
    if (a.code.toLowerCase().startsWith(searchTerm)) return -1;
    if (b.code.toLowerCase().startsWith(searchTerm)) return 1;
    
    if (a.city.toLowerCase().startsWith(searchTerm)) return -1;
    if (b.city.toLowerCase().startsWith(searchTerm)) return 1;
    
    return a.name.localeCompare(b.name);
  });
}

console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤...\n');

// –¢–µ—Å—Ç 1: –ü–æ–∏—Å–∫ –ø–æ –∫–æ–¥—É
console.log('1. –ü–æ–∏—Å–∫ –ø–æ –∫–æ–¥—É "JFK":');
const jfkResults = searchAirports('JFK', 5);
jfkResults.forEach(airport => {
  console.log(`   ‚Ä¢ ${airport.name} (${airport.code}) - ${airport.city}, ${airport.country}`);
});

console.log('\n2. –ü–æ–∏—Å–∫ –ø–æ –∫–æ–¥—É "LAX":');
const laxResults = searchAirports('LAX', 5);
laxResults.forEach(airport => {
  console.log(`   ‚Ä¢ ${airport.name} (${airport.code}) - ${airport.city}, ${airport.country}`);
});

console.log('\n3. –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –≥–æ—Ä–æ–¥–∞ "London":');
const londonResults = searchAirports('London', 5);
londonResults.forEach(airport => {
  console.log(`   ‚Ä¢ ${airport.name} (${airport.code}) - ${airport.city}, ${airport.country}`);
});

console.log('\n4. –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é "Amsterdam":');
const amsterdamResults = searchAirports('Amsterdam', 5);
amsterdamResults.forEach(airport => {
  console.log(`   ‚Ä¢ ${airport.name} (${airport.code}) - ${airport.city}, ${airport.country}`);
});

console.log('\n5. –ü–æ–∏—Å–∫ –ø–æ —Å—Ç—Ä–∞–Ω–µ "Germany":');
const germanyResults = searchAirports('Germany', 5);
germanyResults.forEach(airport => {
  console.log(`   ‚Ä¢ ${airport.name} (${airport.code}) - ${airport.city}, ${airport.country}`);
});

console.log('\n6. –ü–æ–∏—Å–∫ –ø–æ —á–∞—Å—Ç–∏—á–Ω–æ–º—É –∫–æ–¥—É "LA":');
const laResults = searchAirports('LA', 5);
laResults.forEach(airport => {
  console.log(`   ‚Ä¢ ${airport.name} (${airport.code}) - ${airport.city}, ${airport.country}`);
});

console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
console.log(`üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤ –≤ –±–∞–∑–µ: ${airportsData.length}`); 